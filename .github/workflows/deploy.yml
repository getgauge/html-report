name: deploy
on:
  pull_request:
    types: [closed]

jobs:
  deploy:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'ReleaseCandidate')
    name: Deploy html report
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

    steps:
      - uses: actions/checkout@v1

      - uses: geertvdc/setup-hub@master

      - name: Setup go 1.13.1
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.1

      - name: build
        run: |
          go run build/make.go --all-platforms
          go run build/make.go --all-platforms --distro

      - name: Deploy
        run: |
          cd deploy
          if [ -z "$version" ]; then
            version=$(ls html-report* | head -1 | sed "s/\.[^\.]*$//" | sed "s/html-report-//" | sed "s/-[a-z]*\.[a-z0-9_]*$//");
          fi
          echo "::set-env name=VERSION::$version"
          artifacts=()
          dir=`pwd`
          for i in `ls`; do
              artifacts+="$dir/$i "
          done
          cd ..
          echo "---------------------------"
          echo "Updating release v$version"
          echo "---------------------------"
          echo -e "HTML Report v$version\n\n" > desc.txt
          release_description=$(ruby -e "$(curl -sSfL https://github.com/getgauge/gauge/raw/master/build/create_release_text.rb)" html-report getgauge)
          echo "$release_description" >> desc.txt
          echo "Creating new draft for release v$version"
          hub release create -F ./desc.txt "v$version"
          rm -rf desc.txt
          echo "Start uploading assets..."
          for i in `ls $artifacts`; do
              hub release edit -m "" -a $i "v$version"
              if [ $? -ne 0 ];then
                  exit 1
              fi
          done

      - name: Update metadata in gauge-repository
        run: |
          git clone https://github.com/getgauge/gauge-repository.git
          cd gauge-repository
          python update_metadata.py js $VERSION
          commit_message=$(echo -e "Update js to v$VERSION")
          git commit -am "$commit_message"
          git push "https://$GITHUB_ACTOR:$GAUGE_CI_TOKEN@github.com/getgauge/gauge-repository.git" master


      - name: Bump up version
        run: |
          git clean -dfx
          git checkout master && git checkout . && git pull --rebase
          version=$(python update_version.py)
          git commit -am "Bumping up -> $version"
          git push "https://$GITHUB_ACTOR:$GAUGE_CI_TOKEN@github.com/$GITHUB_REPOSITORY.git" master