/* The start of the report page. */
{{define "htmlPageStartTag"}}
  <!doctype html>
  <html><head>
    <meta http-equiv="X-UA-Compatible" content="IE=9; IE=8; IE=7; IE=EDGE" />
    <meta charset="utf-8" />
    <title>Gauge Test Results</title>
    <link rel="shortcut icon" type="image/x-icon" href="{{(toPath .BasePath "images/favicon.ico")}}">
    <link rel="stylesheet" type="text/css" href="{{(toPath .BasePath "css/open-sans.css")}}">
    <link rel="stylesheet" type="text/css" href="{{(toPath .BasePath "css/font-awesome.css")}}">
    <link rel="stylesheet" type="text/css" href="{{(toPath .BasePath "css/normalize.css")}}" />
    <link rel="stylesheet" type="text/css" href="{{(toPath .BasePath "css/style.css")}}" />
  </head>
  <body>
  <header class="top">
    <div class="header">
      <div class="container">
        <div class="logo">
          <a href="{{toPath .BasePath ""}}"><img src="{{(toPath .BasePath "images/gaugeLogo.png")}}" alt="Report logo"></a>
        </div>
        <h2 class="project">Project: {{.ProjectName}}</h2>
      </div>
    </div>
  </header>
  <main class="main-container">
  <div class="container">
{{end}}
/* The pie chart section of the report.*/
{{define "reportChart"}}
  <div class="report_chart">
    <div class="chart">
      <svg id="pie-chart" data-results="{{.Failed}},{{.Passed}},{{.Skipped}}" data-total="{{.Total}}">
        <path class="status failed" />
        <path class="shadow failed" data-status="failed"><title>Failed: {{.Failed}}/{{.Total}}</title></path>
        <path class="status passed" />
        <path class="shadow passed" data-status="passed"><title>Passed: {{.Passed}}/{{.Total}}</title></path>
        <path class="status skipped" />
        <path class="shadow skipped" data-status="skipped"><title>Skipped: {{.Skipped}}/{{.Total}}</title></path>
      </svg>
    </div>
  </div>
{{ end}}
/* Result section of report overview.*/
{{define "resultOverview"}}
  <div class="report_test-results">
    <div class="report_test-result specs">
        <div class="total-specs" title="Filter all specs"><span class="txt">Total specs</span><span class="value">{{.Summary.Total}}</span></div>
        <div class="fail spec-filter" data-status="failed" title="Filter failed specs"><span class="value">{{.Summary.Failed}}</span></div>
        <div class="pass spec-filter" data-status="passed" title="Filter passed specs"><span class="value">{{.Summary.Passed}}</span></div>
        <div class="skip spec-filter" data-status="skipped" title="Filter skipped specs"><span class="value">{{.Summary.Skipped}}</span></div>
    </div>
    <div class="report_test-result scenarios">
        <div class="total-scenarios"><span class="txt">Total scenario</span><span class="value">{{.ScenarioSummary.Total}}</span></div>
        <div class="fail scenario-stats" data-status="failed"><span class="value">{{.ScenarioSummary.Failed}}</span></div>
        <div class="pass scenario-stats" data-status="passed"><span class="value">{{.ScenarioSummary.Passed}}</span></div>
        <div class="skip scenario-stats" data-status="skipped"><span class="value">{{.ScenarioSummary.Skipped}}</span></div>
    </div>
  </div>
{{end}}
/* Report details.*/
{{define "reportDetails"}}
  <ul>
    <li>
      <label>Environment </label>
      <span>{{.Env}}</span>
    </li>
    {{if .Tags}}
    <li>
      <label>Tags </label>
      <span>{{.Tags}}</span>
    </li>
    {{end}}
    <li>
      <label>Success Rate </label>
      <span>{{.SuccessRate}}%</span>
    </li>
    <li>
      <label>Total Time </label>
      <span>{{.ExecutionTime}}</span>
    </li>
    <li>
      <label>Generated On </label>
      <span>{{.Timestamp}}</span>
    </li>
  </ul>
{{end}}
/* The overview section of the report. Contains execution result statistics.
   Clicking on the pie chart causes the specs in sidebar to be filtered by the status. */
{{define "reportOverviewTag"}}
  <div class="report-overview">
   {{template "reportChart" .Summary}}
   {{template "resultOverview" .}}
    <div class="report_details">
      {{template "reportDetails" .}}
      {{template "suiteMessagesDiv" .}}
      {{template "suiteScreenshotsDiv" .}}
    </div>
  </div>
{{end}}
{{define "indexPageOverviewTag"}}
  <div class="report-overview">
   {{template "reportChart" .Summary}}
   {{template "resultOverview" .}}
    <div class="report_details">
      {{template "reportDetails" .}}
      {{template "suiteMessagesDiv" .}}
      {{template "suiteScreenshotsIndexPageDiv" .}}
    </div>
  </div>
{{end}}

/* Prints out the messages that the user may have introduces using the Gauge.WriteMessage API in before and after suite hooks*/
{{define "suiteMessagesDiv"}}
  {{if or (gt (len .PreHookMessages) 0) (gt (len .PostHookMessages) 0)}}
    <div class="suite_messages">
      {{if gt (len .PreHookMessages) 0}}
        <div>
          {{range .PreHookMessages}}<div class="step-message">{{. | encodeNewLine | parseMarkdown | sanitize}} </div>{{end}}
        </div>
        {{if gt (len .PostHookMessages) 0}}
          <div class="message_separator">--------</div>
        {{end}}
      {{end}}
      {{if gt (len .PostHookMessages) 0}}
        <div>
          {{range .PostHookMessages}}<div class="step-message">{{. | encodeNewLine | parseMarkdown | sanitize}} </div>{{end}}
        </div>
      {{end}}
    </div>
  {{end}}
{{end}}

/* Show all screenshots on other than index page that the user may have introduces using the Gauge.captureScreenshot API in before and after suite hooks*/
{{define "suiteScreenshotsDiv"}}
  {{if or (gt (len .PreHookScreenshots) 0) (gt (len .PostHookScreenshots) 0)}}
    <div class="suite_screenshots">
      {{if gt (len .PreHookScreenshots) 0}}
        <div>Before Suite Screenshots</div>
        {{template "screenshotDivForBase64Data" .PreHookScreenshots}}
      {{end}}
      {{if gt (len .PostHookScreenshots) 0}}
        <div>After Suite Screenshots</div>
        {{template "screenshotDivForBase64Data" .PostHookScreenshots}}
      {{end}}
    </div>
  {{end}}
  {{if or (gt (len .PreHookScreenshotFiles) 0) (gt (len .PostHookScreenshotFiles) 0)}}
    <div class="suite_screenshots">
      {{if gt (len .PreHookScreenshotFiles) 0}}
        <div>Before Suite Screenshots</div>
          <div class="screenshot-container">
            {{range .PreHookScreenshotFiles}}
              <div class="screenshot">
                <a href="{{toPath $.BasePath (print "images/" .)}}" rel="lightbox">
                  <img src="{{toPath $.BasePath (print "images/" .)}}" class="screenshot-thumbnail" />
                </a>
              </div>
            {{end}}
          </div>
      {{end}}
      {{if gt (len .PostHookScreenshotFiles) 0}}
        <div>After Suite Screenshots</div>
          <div class="screenshot-container">
            {{range .PostHookScreenshotFiles}}
              <div class="screenshot">
                <a href="{{toPath $.BasePath (print "images/" .)}}" rel="lightbox">
                  <img src="{{toPath $.BasePath (print "images/" .)}}" class="screenshot-thumbnail" />
                </a>
              </div>
            {{end}}
          </div>
      {{end}}
    </div>
  {{end}}

{{end}}

/* Show all screenshots on index page that the user may have introduces using the Gauge.captureScreenshot API in before and after suite hooks*/
{{define "suiteScreenshotsIndexPageDiv"}}
  {{if or (gt (len .PreHookScreenshots) 0) (gt (len .PostHookScreenshots) 0)}}
    <div class="suite_screenshots">
      {{if gt (len .PreHookScreenshots) 0}}
        <div>Before Suite Screenshots</div>
        {{template "screenshotDivForBase64Data" .PreHookScreenshots}}
      {{end}}
      {{if gt (len .PostHookScreenshots) 0}}
        <div>After Suite Screenshots</div>
        {{template "screenshotDivForBase64Data" .PostHookScreenshots}}
      {{end}}
    </div>
  {{end}}
  {{if or (gt (len .PreHookScreenshotFiles) 0) (gt (len .PostHookScreenshotFiles) 0)}}
    <div class="suite_screenshots">
      {{if gt (len .PreHookScreenshotFiles) 0}}
        <div>Before Suite Screenshots</div>
          <div class="screenshot-container">
          {{range .PreHookScreenshotFiles}}
            {{if .}}
              <div class="screenshot">
                <a href="{{toPath $.BasePath (print "images/" .)}}" rel="lightbox">
                  <img src="{{toPath $.BasePath (print "images/" .)}}" class="screenshot-thumbnail" />
                </a>
              </div>
            {{end}}
          {{end}}
          </div>
      {{end}}
      {{if gt (len .PostHookScreenshotFiles) 0}}
        <div>After Suite Screenshots</div>
          <div class="screenshot-container">
          {{range .PostHookScreenshotFiles}}
            {{if .}}
              <div class="screenshot">
                <a href="{{toPath $.BasePath (print "images/" .)}}" rel="lightbox">
                  <img src="{{toPath $.BasePath (print "images/" .)}}" class="screenshot-thumbnail" />
                </a>
              </div>
            {{end}}
          {{end}}
          </div>
      {{end}}
    </div>
  {{end}}

{{end}}

/* The sidebar resides on the side , and holds the list of specs that were part of the execution.
   Users may click to view individual spec's output, search for a spec by either tags or spec heading.
   Users are also given an autocomplete suggestion. */
{{define "sidebarDiv"}}
  {{if not .IsBeforeHookFailure}}
    <aside class="sidebar">
      <h3 class="title">Specifications</h3>
      <div class="searchbar">
        <input id="searchSpecifications" placeholder="Type specification or tag name" type="text" />
        <i class="fa fa-search"></i>
      </div>
      <div class="specs-sorting">
        <div class="sort sort-specs-name" data-sort-by="specs-name"><span class="sort-icons"><i class="fa fa-caret-up"></i><i class="fa fa-caret-down"></i></span><span>Name</span></div>
        <div class="sort sort-execution-time" data-sort-by="execution-time"><span class="sort-icons"><i class="fa fa-caret-up"></i><i class="fa fa-caret-down"></i></span><span>Execution time</span></div>
      </div>
      <div id="listOfSpecifications">
        <ul id="scenarios" class="spec-list">
        {{range $index, $specMeta := .Specs}}
          <a href="{{.ReportFile}}">
            {{if $specMeta.Failed}}
              <li class="failed spec-name">
            {{else if $specMeta.Skipped}} 
              <li class="skipped spec-name">
            {{else}} 
              <li class="passed spec-name">
            {{end}}
              <span id="scenarioName" class="scenarioname">{{$specMeta.SpecName | escapeHTML }}</span>
              <span id="time" class="time">{{$specMeta.ExecutionTime}}</span>
            </li>
          </a>
          {{end}}
        </ul>
      </div>
    </aside>
  {{end}}
{{end}}

/* Container to display errors in Execution hooks. Execution hooks can be at Suite/Spec or Scenario level */
{{define "hookFailureDiv"}}
  <div class="error-container failed{{if gt .TableRowIndex 0}} hidden{{end}}"{{if ne .TableRowIndex -1}} data-tablerow='{{.TableRowIndex}}'{{end}}>
    <div class="error-heading">{{.HookName}} Failed:<span class="error-message"> {{.ErrMsg | escapeHTML | encodeNewLine}}</span></div>
    <div class="toggle-show">
      [Show details]
    </div>
    <div class="exception-container hidden">
      <div class="exception">
        <pre class="stacktrace">{{.StackTrace | escapeHTML | encodeNewLine}}</pre>
      </div>
      {{if .FailureScreenshotFile}}
        <div class="screenshot-container">
          <div class="screenshot">
            <a href="{{toPath .BasePath (print "images/" .FailureScreenshotFile)}}" rel="lightbox">
              <img src="{{toPath .BasePath (print "images/" .FailureScreenshotFile)}}" class="screenshot-thumbnail" />
            </a>
          </div>
        </div>
      {{end}}
      {{if .FailureScreenshot}}
        <div class="screenshot-container">
          <div class="screenshot">
            <a href="data:image/png;base64,{{.FailureScreenshot}}" rel="lightbox">
              <img src="data:image/png;base64,{{.FailureScreenshot}}" class="screenshot-thumbnail" />
            </a>
          </div>
        </div>
      {{end}}
    </div>
  </div>
{{end}}
{{define "indexPageHookFailureDiv"}}
  <div class="error-container failed{{if gt .TableRowIndex 0}} hidden{{end}}"{{if ne .TableRowIndex -1}} data-tablerow='{{.TableRowIndex}}'{{end}}>
    <div class="error-heading">{{.HookName}} Failed:<span class="error-message"> {{.ErrMsg | escapeHTML | encodeNewLine}}</span></div>
    <div class="toggle-show">
      [Show details]
    </div>
    <div class="exception-container hidden">
      <div class="exception">
        <pre class="stacktrace">{{.StackTrace | escapeHTML | encodeNewLine}}</pre>
      </div>
      {{if .FailureScreenshotFile}}
        <div class="screenshot-container">
          <div class="screenshot">
            <a href="{{toPath .BasePath (print "images/" .FailureScreenshotFile)}}" rel="lightbox">
              <img src="{{toPath .BasePath (print "images/" .FailureScreenshotFile)}}" class="screenshot-thumbnail" />
            </a>
          </div>
        </div>
      {{end}}
      {{if .FailureScreenshot}}
        <div class="screenshot-container">
          <div class="screenshot">
            <a href="data:image/png;base64,{{.FailureScreenshot}}" rel="lightbox">
              <img src="data:image/png;base64,{{.FailureScreenshot}}" class="screenshot-thumbnail" />
            </a>
          </div>
        </div>
      {{end}}
    </div>
  </div>
{{end}}

/* Lists all errors in a Spec file */
{{define "specErrorDiv"}}
  <div class="error-container failed">
    <div class="error-heading">Errors:</div>
    <div class="exception-container">
      <div class="exception">
        <pre class="error">
          {{range .Errors}}
            {{.Error}}
          {{end}}
        </pre>
      </div>
    </div>
  </div>
{{end}}

/* Lists the tags for a spec/scenario. */
{{define "tagsDiv"}}
  {{if .Tags}}
    <div class="tags scenario_tags contentSection">
      <strong>Tags:</strong>
      {{range .Tags}}
        <span> {{. | escapeHTML }}</span>
      {{end}}
    </div>
  {{end}}
{{end}}

/* Prints out the messages that the user may have introduces using the Gauge.WriteMessage API */
{{define "messageDiv"}}
  {{if .}}
    <div class="message-container">
      <i class="fa fa-minus-square" aria-hidden="true"></i>
      <div class="messages">
        {{range .}}<div class="step-message">{{. | encodeNewLine | parseMarkdown | sanitize}} </div>{{end}}
      </div>
    </div>
  {{end}}
{{end}}

/* Show all screenshots that the user may have introduce using the Gauge.captureScreenshot API */
{{define "screenshotIndexPageDiv"}}
  {{ if gt (len .) 0}}
    <div class="screenshot-container">
    {{range .}}
      {{if .}}
        <div class="screenshot">
          <a href="./images/{{.}}" rel="lightbox">
            <img src="./images/{{.}}" class="screenshot-thumbnail" />
          </a>
        </div>
      {{end}}
    {{end}}
    </div>
  {{end}}
{{end}}
{{define "screenshotDivForBase64Data"}}
  {{ if gt (len .) 0}}
    <div class="screenshot-container">
    {{range .}}
      {{if .}}
        <div class="screenshot">
          <a href="data:image/png;base64,{{.}}" rel="lightbox">
            <img src="data:image/png;base64,{{.}}" class="screenshot-thumbnail" />
          </a>
        </div>
      {{end}}
    {{end}}
    </div>
  {{end}}
{{end}}

/* Lists reason(s) for a spec being skipped in an execution */
{{define "skippedReasonDiv"}}
  <div class="message-container">
    <h4 class="skipReason">Skipped Reason: {{.SkippedReason | escapeHTML }}</h4>
  </div>
{{end}}

/* Container for the spec header section. Holds the spec filename, scenario statistics etc */
{{define "specHeaderStartTag"}}
  <div id="specificationContainer" class="details">
    <header class="curr-spec">
      <div class="spec-head-wrapper">
        <h3 class="spec-head" title="{{.FileName}}">{{.SpecName | escapeHTML }}</h3>
        <div class="hidden report_test-results" alt="Scenarios" title="Scenarios">
          <ul>
            <li class="fail"><span class="value">{{.Summary.Failed}}</span><span class="txt">Failed</span></li>
            <li class="pass"><span class="value">{{.Summary.Passed}}</span><span class="txt">Passed</span></li>
            <li class="skip"><span class="value">{{.Summary.Skipped}}</span><span class="txt">Skipped</span></li>
          </ul>
        </div>
      </div>
      <div class="spec-meta">
        <div class="spec-filename">
          <label for="specFileName">File Path</label>
          <input id="specFileName" value="{{.FileName}}" readonly/>
          <button class="clipboard-btn" data-clipboard-target="#specFileName" title="Copy to Clipboard">
              <i class="fa fa-clipboard" aria-hidden="true" title="Copy to Clipboard"></i>
          </button>
        </div>
        <span class="time">{{.ExecutionTime}}</span>
      </div>
{{end}}


/* Begin rendering Scenario. Holds Execution Status and also the table-row when rendering Table Driven Scenarios */
{{define "scenarioContainerStartDiv"}}
  <div class="scenario-container {{if eq .ExecutionStatus "pass"}}passed{{if gt .TableRowIndex 0}} hidden{{end}}"{{if ne .TableRowIndex -1}} data-tablerow='{{.TableRowIndex}}'{{end}}>
    {{else if eq .ExecutionStatus "fail"}}failed{{if gt .TableRowIndex 0}} hidden{{end}}"{{if ne .TableRowIndex -1}}  data-tablerow='{{.TableRowIndex}}'{{end}}>
    {{else}}skipped{{if gt .TableRowIndex 0}} hidden{{end}}"{{if ne .TableRowIndex -1}}  data-tablerow='{{.TableRowIndex}}'{{end}}>{{end}}
{{end}}

/* Container for Scenario Header, holds the execution time of scenario */
{{define "scenarioHeaderStartDiv"}}
  <div class="scenario-head">
    <h3 class="head borderBottom">{{.Heading | escapeHTML }}</h3>
    {{ if gt .RetriesCount 1}}
      <span class="scenario-retry-count">Retried {{ .RetriesCount }} times</span>
    {{end}}
    <span class="time">{{.ExecutionTime}}</span>
{{end}}

/* renders a Table. Incase of Table-driven execution, this table appears above all scenarios.
   In case of a table parameter, this table appears as part of the Step */
{{define "specCommentsAndTableTag"}}
  {{if ne .CommentsBeforeDatatable ""}}
  <span>{{.CommentsBeforeDatatable | parseMarkdown | sanitize}}</span>
  {{end}}
  {{if .Datatable}}
    <table class="data-table">
      <tr>
        {{range .Datatable.Headers}}<th>{{. | escapeHTML }}</th>{{end}}
      </tr>
      <tbody data-rowCount={{len .Datatable.Rows}}>
        {{range $index, $row := .Datatable.Rows}}
          {{if eq $row.Result "pass"}}<tr class="row-selector passed{{if eq $index 0}} selected{{end}}" data-rowIndex='{{$index}}'>
          {{else if eq $row.Result "fail"}}<tr class="row-selector failed{{if eq $index 0}} selected{{end}}" data-rowIndex='{{$index}}'>
          {{else}}<tr class="row-selector skipped{{if eq $index 0}} selected{{end}}" data-rowIndex='{{$index}}'>
          {{end}}
            {{range $row.Cells}}<td>{{. | escapeHTML }}</td>{{end}}
        </tr>
        {{end}}
      </tbody>
    </table>
  {{end}}

  {{if ne .CommentsAfterDatatable ""}}
  <span>{{.CommentsAfterDatatable | parseMarkdown | sanitize}}</span>
  {{end}}
{{end}}

/* start of Concept */
{{define "conceptStartDiv"}}
  <div class="step concept">
  {{template "stepMetaDiv" .}}
{{end}}

/* start of Step */
{{define "stepStartDiv"}}
  <div class="step">
  {{template "stepMetaDiv" .}}
{{end}}

/* Meta information about Step/Concept. Contains ExecutionTime and Status */
{{define "stepMetaDiv"}}
  {{if ne .Result.Status "skip"}}
    <h5 class="execution-time">
      <span class="time">Execution Time : {{.Result.ExecutionTime}}</span>
    </h5>
  {{end}}
  {{if eq .Result.Status "pass"}}<div class="step-info passed">
  {{else if eq .Result.Status "fail"}}<div class="step-info failed">
  {{else if eq .Result.Status "skip"}}<div class="step-info skipped">
  {{else if eq .Result.Status "not executed"}}<div class="step-info not-executed">
  {{end}}
  <ul>
    <li class="step">
      <div class="step-txt">
{{end}}

/* renders a table */
{{define "Table"}}<table>
  <tr>
    {{range .Table.Headers}}<th>{{. | escapeHTML }}</th>{{end}}
  </tr>
  <tbody>
    {{range .Table.Rows}}
    <tr>{{range .Cells}}<td>{{. | escapeHTML }}</td>{{end}}</tr>
    {{end}}
  </tbody>
</table>
{{end}}

/* Brings up a Modal, used to display content of external file like csv */
{{define "Modal"}}
  <span class="modal-link">&lt;{{.Name | escapeHTML }}&gt;</span>
    <div class="modal">
      <h2 class="modal-title">{{ .FileName }}</h2>
      <span class="close">&times;</span>
      <div class="modal-content">
        <pre>{{.Text}}</pre>
      </div>
    </div>
{{end}}

/* Renders the body of a Step */
{{define "stepBodyDiv"}}
  {{range .Fragments}}
    {{if eq .FragmentKind 0}}
      <span>
        {{.Text | escapeHTML }}
      </span>
    {{else if eq .FragmentKind 1 2}}
      <span class="parameter">"{{.Text | escapeHTML }}"</span>
    {{else if eq .FragmentKind 3}}
      {{template "Modal" .}}
    {{else if eq .FragmentKind 4}}
      {{template "Modal" .}}
    {{else if eq .FragmentKind 5}}
      <div class="inline-table">
        <div>
          {{template "Table" .}}
        </div>
      </div>
    {{end}}
  {{end}}
  </div>
{{end}}

/* Holds the failures in a Step. Includes Stacktrace and Screenshot */
{{define "stepFailureDiv"}}
  <div class="error-container failed">
    <div class="exception-container">
      <div class="exception">
        <h4 class="error-message">
          <pre>{{.ErrorMessage | escapeHTML | encodeNewLine}}</pre>
        </h4>
        <pre class="stacktrace">{{.StackTrace | escapeHTML | encodeNewLine}}</pre>
      </div>
      {{ if not .FailureScreenshotFile}}
        {{if .FailureScreenshot}}
        <div class="screenshot-container">
          <div class="screenshot">
            <a href="data:image/png;base64,{{.FailureScreenshot}}" rel="lightbox">
              <img src="data:image/png;base64,{{.FailureScreenshot}}" class="screenshot-thumbnail" />
            </a>
          </div>
        </div>
        {{else}}
          {{ if screenshotOfFailureEnabled }}
            <div class="screenshot-container custom-screenshot-message">
              <div class="screenshot">
              <p class="custom-message">To view a screenshot of this failed step, Please set up a <a href="https://docs.gauge.org/writing-specifications/#taking-custom-screenshots">custom screenshot handler.</a></p>
              </div>
            </div>
          {{end}}
        {{end}}
      {{else}}
         <div class="screenshot-container">
          <div class="screenshot">
            <a href="{{toPath .BasePath (print "images/" .FailureScreenshotFile)}}" rel="lightbox">
              <img src="{{toPath .BasePath (print "images/" .FailureScreenshotFile)}}" class="screenshot-thumbnail" />
            </a>
          </div>
        </div>
      {{end}}
    </div>
  </div>
{{end}}

/* Load javascript in the end */
{{define "htmlPageEndWithJS"}}
    <script type="text/javascript">
      var loadingImage = "{{(toPath .BasePath "images/loading.gif")}}";
      var closeButton = "{{(toPath .BasePath "images/close.gif")}}";
    </script>
    <script src="{{(toPath .BasePath "js/lightbox.js")}}"></script>
    <script src="{{(toPath .BasePath "js/jquery-3.1.0.min.js")}}" type="text/javascript"></script>
    <script src="{{(toPath .BasePath "js/auto-complete.min.js")}}" type="text/javascript"></script>
    <script src="{{(toPath .BasePath "js/clipboard.min.js")}}" type="text/javascript"></script>
    <script src="{{(toPath .BasePath "js/search_index.js")}}" type="text/javascript"></script>
    <script src="{{(toPath .BasePath "js/main.js")}}" type="text/javascript"></script>
    </body>
  </html>
{{end}}

{{define "bodyFooterTag"}}
  <footer class="footer">
    <div class="container">
      <p>Generated by Gauge HTML Report</p>
    </div>
  </footer>
{{end}}

/* container for a Step */
{{define "step"}}
  {{template "stepStartDiv" .}}
  {{template "messageDiv" .PreHookMessages}}
  {{template "screenshotDivForBase64Data" .PreHookScreenshots}}
  {{ if gt (len .PreHookScreenshotFiles) 0}}
    <div class="screenshot-container">
      {{range .PreHookScreenshotFiles}}
        <span>{{$.BasePath}}</span>
        <div class="screenshot">
          <a href="{{toPath $.BasePath (print "images/" .)}}" rel="lightbox">
            <img src="{{toPath $.BasePath (print "images/" .)}}" class="screenshot-thumbnail" />
          </a>
        </div>
      {{end}}
    </div>
  {{end}}
  
  {{if .BeforeStepHookFailure}}
    {{ template "hookFailureDiv" .BeforeStepHookFailure }}
  {{end}}
  {{template "stepBodyDiv" .}}
  {{with .Result}}
    {{if and (and (eq .Status "fail") (ne .ErrorMessage "")) }}
        {{template "stepFailureDiv" .}}
    {{end }}
    {{template "messageDiv" .Messages}}
    {{ if gt (len .ScreenshotFiles) 0}}
      <div class="screenshot-container">
        {{range .ScreenshotFiles}}
          <div class="screenshot">
            <a href="{{toPath $.BasePath (print "images/" .)}}" rel="lightbox">
              <img src="{{toPath $.BasePath (print "images/" .)}}" class="screenshot-thumbnail" />
            </a>
          </div>
        {{end}}
      </div>
    {{end}}
    {{template "screenshotDivForBase64Data" .Screenshots}}
  {{end}}
  {{if .AfterStepHookFailure}}
    {{ template "hookFailureDiv" .AfterStepHookFailure }}
  {{end}}
  {{template "messageDiv" .PostHookMessages}}
  {{template "screenshotDivForBase64Data" .PostHookScreenshots}}
  {{ if gt (len .PostHookScreenshotFiles) 0}}
    <div class="screenshot-container">
      {{range .PostHookScreenshotFiles}}
        <div class="screenshot">
          <a href="{{toPath $.BasePath (print "images/" .)}}" rel="lightbox">
            <img src="{{toPath $.BasePath (print "images/" .)}}" class="screenshot-thumbnail" />
          </a>
        </div>
      {{end}}
    </div>
  {{end}}
	</li></ul></div></div>
  {{with .Result}}
    {{if (and (eq .Status "skip") (ne .SkippedReason "")) }}
        {{template "skippedReasonDiv" .}}
    {{end }}
  {{end}}
{{end}}

/* container for a Concept */
{{define "concept"}}
  {{template "conceptStartDiv" .ConceptStep}}
  <i class="fa fa-plus-square" aria-hidden="true"></i>
  {{template "stepBodyDiv" .ConceptStep}}
  </li></ul></div></div>
  <div class="concept-steps">
  {{range $index, $item := .Items}}
    {{template "item" $item}}
  {{end}}
  </div>
{{end}}

/* generic container, switch based on kind */
{{define "item"}}
  {{if eq .Kind "step"}}
    {{template "step" .Step}}
  {{else if eq .Kind "comment"}}
    <span>{{.Comment.Text | parseMarkdown | sanitize}}</span>
  {{else if eq .Kind "concept"}}
    {{template "concept" .Concept}}
  {{end}}
{{end}}

/* container for a scenario */
{{define "scenario"}}
	{{template "scenarioContainerStartDiv" .}}
	{{template "scenarioHeaderStartDiv" .}}
	{{template "tagsDiv" .}}
	</div>
  {{template "messageDiv" .PreHookMessages}}
  {{template "screenshotDivForBase64Data" .PreHookScreenshots}}
  {{ if gt (len .PreHookScreenshotFiles) 0}}
    <div class="screenshot-container">
      {{range .PreHookScreenshotFiles}}
        <div class="screenshot">
          <a href="{{toPath $.BasePath (print "images/" .)}}" rel="lightbox">
            <img src="{{toPath $.BasePath (print "images/" .)}}" class="screenshot-thumbnail" />
          </a>
        </div>
      {{end}}
    </div>
  {{end}}
	{{if .BeforeScenarioHookFailure}}
		{{template "hookFailureDiv" .BeforeScenarioHookFailure}}
	{{end}}

  {{range $i, $c := .Contexts}}
    <div class="context-step">
      {{template "item" $c}}
    </div>
  {{end}}
  {{range $i, $item := .Items}}
    {{template "item" $item}}
  {{end}}
  {{range $i, $t := .Teardowns}}
    <div class="context-step">
      {{template "item" $t}}
    </div>
  {{end}}

  {{template "messageDiv" .PostHookMessages}}
  {{template "screenshotDivForBase64Data" .PostHookScreenshots}}
  {{ if gt (len .PostHookScreenshotFiles) 0}}
    <div class="screenshot-container">
      {{range .PostHookScreenshotFiles}}
        <div class="screenshot">
          <a href="{{toPath $.BasePath (print "images/" .)}}" rel="lightbox">
            <img src="{{toPath $.BasePath (print "images/" .)}}" class="screenshot-thumbnail" />
          </a>
        </div>
      {{end}}
    </div>
  {{end}}
	{{if .AfterScenarioHookFailure }}
		{{template "hookFailureDiv" .AfterScenarioHookFailure}}
	{{end}}
	</div>
{{end}}

/* container for a specification */
{{define "spec"}}
  {{$specHeader := toSpecHeader .}}
	{{template "specHeaderStartTag" $specHeader}}
	{{template "tagsDiv" $specHeader}}
	</header>
	<div id="specItemsContainer">
	{{if containsParseErrors .Errors}}
		{{template "specErrorDiv" .}}
		</div>
	{{else}}
    {{template "messageDiv" .PreHookMessages}}
    {{if gt (len .PreHookScreenshots) 0}}
      <div class="spec-screenshot-container">
        {{template "screenshotDivForBase64Data" .PreHookScreenshots}}
      </div>
    {{end}}
    {{if gt (len .PreHookScreenshotFiles) 0}}
      <div class="spec-screenshot-container">
        <div class="screenshot-container">
          {{range .PreHookScreenshotFiles}}
            <div class="screenshot">
              <a href="{{toPath $.BasePath (print "images/" .)}}" rel="lightbox">
                <img src="{{toPath $.BasePath (print "images/" .)}}" class="screenshot-thumbnail" />
              </a>
            </div>
          {{end}}
        </div>
      </div>
    {{end}}
    {{range $index, $beforeHook := .BeforeSpecHookFailures}}
      {{template "hookFailureDiv" $beforeHook}}
    {{end}}

    <div class="content">
    {{template "specCommentsAndTableTag" .}}
      {{range $index, $scn := .Scenarios}}
        {{template "scenario" $scn}}
      {{end}}

    </div>
    </div>

    {{template "messageDiv" .PostHookMessages}}
    {{if gt (len .PostHookScreenshots) 0}}
      <div class="spec-screenshot-container">
      {{template "screenshotDivForBase64Data" .PostHookScreenshots}}
      </div>
    {{end}}
    {{if gt (len .PostHookScreenshotFiles) 0}}
      <div class="spec-screenshot-container">
        <div class="screenshot-container">
          {{range .PostHookScreenshotFiles}}
            <div class="screenshot">
              <a href="{{toPath $.BasePath (print "images/" .)}}" rel="lightbox">
                <img src="{{toPath $.BasePath (print "images/" .)}}" class="screenshot-thumbnail" />
              </a>
            </div>
          {{end}}
        </div>
      </div>
    {{end}}
    {{range $index, $afterHook := .AfterSpecHookFailures}}
      {{template "hookFailureDiv" $afterHook}}
    {{end}}
    </div>
  {{end}}
{{end}}

/* holds definition to render a Spec page */
{{define "specPage"}}
	{{$overview := (toOverview .SuiteRes .SpecRes.FileName)}}
	{{template "htmlPageStartTag" $overview}}
	{{template "reportOverviewTag" $overview}}

	{{if .SuiteRes.BeforeSuiteHookFailure}}
		{{template "hookFailureDiv" .SuiteRes.BeforeSuiteHookFailure}}
	{{end}}

	{{if .SuiteRes.AfterSuiteHookFailure}}
		{{template "hookFailureDiv" .SuiteRes.AfterSuiteHookFailure}}
	{{end}}

	{{if not .SuiteRes.BeforeSuiteHookFailure }}
		<div class="specifications">
		{{template "sidebarDiv" (toSidebar .SuiteRes .SpecRes.FileName)}}
		{{template "spec"  .SpecRes}}
		</div>
	{{end}}

 	</div>
	</main>
	{{template "bodyFooterTag"}}
	{{template "htmlPageEndWithJS" $overview}}
{{end}}

/* holds definition to render an index page */
{{define "indexPage"}}
	{{$overview := (toOverview . "")}}
	{{template "htmlPageStartTag" $overview}}
	{{template "indexPageOverviewTag" $overview}}
	{{if .AfterSuiteHookFailure}}
		{{template "indexPageHookFailureDiv" .AfterSuiteHookFailure}}
	{{end}}
  <div class="specifications">
  {{template "sidebarDiv" (toSidebar . "")}}
	{{if ne .ExecutionStatus "fail" }}
    <div class="congratulations details">
      <p>Congratulations! You've gone all <span class="green">green</span> and saved the environment!</p>
    </div>
	{{end}}
 	</div>
 	</div>
	</main>
	{{template "bodyFooterTag"}}
	{{template "htmlPageEndWithJS" $overview}}
{{end}}

/* holds definition to render an index page with before suite hook failure */
{{define "indexPageFailure"}}
	{{$overview := (toOverview . "")}}
	{{template "htmlPageStartTag" $overview}}
	{{template "indexPageOverviewTag" $overview}}
  {{template "indexPageHookFailureDiv" .BeforeSuiteHookFailure}}
	{{if .AfterSuiteHookFailure}}
		{{template "indexPageHookFailureDiv" .AfterSuiteHookFailure}}
	{{end}}
 	</div>
	</main>
	{{template "bodyFooterTag"}}
	{{template "htmlPageEndWithJS" $overview}}
{{end}}
